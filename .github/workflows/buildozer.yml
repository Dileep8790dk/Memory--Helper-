# .github/workflows/android_build.yml

name: Build Kivy APK

# Trigger the workflow on pushes to the main branch
on:
  push:
    branches: [ main ]
  # Allows manual triggering from the GitHub Actions tab
  workflow_dispatch:

jobs:
  build:
    # Runs the job on a Linux virtual machine
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the code from your repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Build the APK using Buildozer
      # This action sets up the necessary dependencies and runs the command
      - name: Build Android Debug APK
        uses: digreatbrian/buildozer-action@v2
        with:
          # The command to execute: debug build for Android
          buildozer-cmd: buildozer -v android debug
          # Optional: Specify the Python version if needed (3.8 is a safe default)
          python-version: 3.8
          # Optional: If your code is in a subfolder, specify it here (Assuming all files are in the root for simplicity)
          # work-dir: ToDoApp 

      # Step 3: Upload the generated APK as an artifact
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          # The name of the downloadable file set
          name: ToDoApp-APK-Artifact
          # The path where Buildozer puts the final APK
          path: bin/*.apk
